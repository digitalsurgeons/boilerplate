image: registry.gitlab.com/digitalsurgeons/build-base:latest

# Cacheing
cache:
  paths:
    - node_modules/
    # - vendor

### Uncomment out the following job for Composer-based projects,
### then remove this notice.
# build_backend:
#   script:
#     - composer install --no-interaction
#   artifacts:
#     paths:
#       - vendor/
#   stage: build
#   only:
#     - branches

build_frontend:
  script:
    - npm install
    - npm start
  artifacts:
    paths:
      - public_html/dist/
  stage: build
  only:
    - branches

### Use one of the following in your script block in one
### of the deploy_* jobs for different transports.

### For deployments where we have ssh access
# Add private key so we can connect to destination server
# - echo "$SSH_PRIVATE_KEY" > id_rsa
# - chmod 0600 id_rsa
# - rsync --copy-unsafe-links -rvzcSle 'ssh -p 22 -o StrictHostKeyChecking=no -i id_rsa' --exclude-from=.rsyncignore --exclude=public_html/src ./ user@ip:/path/to/project/

### For deployments that must be over FTP (bleh)
### This assumes that you are only deploying the public_html folder (no dynamic scripts).
# - dandelion deploy
### You will additionally need an environment section in your deploy job:
# variables:
#   DANDELION_HOST: "$HOST"
#   DANDELION_PORT: "$PORT"
#   DANDELION_USERNAME: "$FTP_STG_USERNAME"
#   DANDELION_PASSWORD: "$FTP_STG_PASSWORD"
#   # Dandelion has problems with UTF-8 when it
#   # is set as the global ruby default. Unset
#   # it here.
#   RUBYOPT: ""
### Lastly, you will need to create a dandelion.yml file in the root
### with the contents like the following, which is for a wordpress site:
# adapter: sftp
# host: <%= ENV['DANDELION_HOST'] %>
# port: <%= ENV['DANDELION_PORT'] %>
# username: <%= ENV['DANDELION_USERNAME'] %>
# password: <%= ENV['DANDELION_PASSWORD'] %>
# local_path: public_html/
#
# exclude:
#     - wp-admin
#     - wp-includes
#     - wp-content/mu-plugins
#
# additional:
#     - public_html/wp-content/themes/<themename>/dist/: wp-content/themes/<themename>/dist/


### For deployments to an S3 bucket (static sites or assets)
### This assumes that you are only deploying the public_html folder (no dynamic scripts).
### For staging deployments you can remove the exclude for the src folder
# - aws s3 sync --exclude 'src/*' --exclude 'bower_components/*' public_html/ s3://$S3_BUCKET_NAME/

### Uncomment the following for staging and production
### deployments. Remove all of the above comments when done.

# deploy_prod:
#   script:
#     # Add lines from one of the deployment options above
#   stage: deploy
#   environment: production
#   only:
#     - production
#
# deploy_stage:
#   script:
#     # Add lines from one of the deployment options above
#   stage: deploy
#   environment: staging
#   only:
#     - master

### The following is set to deploy to dsdev for boilerplate,
### PLEASE REPLACE "ds-boilerplate" in the path at the end of
### the rsync command to the subdomain name for this project,
### or, if not deploying to dsdev, change the user, ip and path
### to match the desired development environment
### Remove this notice when complete.
deploy_dev:
  script:
    # Add private key so we can connect to destination server
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - chmod 0600 id_rsa
    - rsync --copy-unsafe-links -rvzcSle 'ssh -p 22 -o StrictHostKeyChecking=no -i id_rsa' --exclude-from=.rsyncignore ./ digitals@104.131.52.140:/var/www/ds-boilerplate/
  stage: deploy
  environment: development
  only:
    - develop
